<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="32" passed="32">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="356" started-at="2016-07-28T08:58:05Z" finished-at="2016-07-28T08:58:06Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="356" started-at="2016-07-28T08:58:05Z" finished-at="2016-07-28T08:58:06Z">
      <class name="test.MerchantGalaxyGuideTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="beforeClass" is-config="true" duration-ms="22" started-at="2016-07-28T14:28:05Z" finished-at="2016-07-28T14:28:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testNumTranslatorProcess([Ljava.lang.String;, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testNumTranslatorProcess" duration-ms="17" started-at="2016-07-28T14:28:05Z" data-provider="galaxynumerals" finished-at="2016-07-28T14:28:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@733636ed]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^([a-z]+) is ([I|V|X|L|C|D|M])$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNumTranslatorProcess -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:05Z" finished-at="2016-07-28T14:28:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInValidMPCalculator(java.lang.String, java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInValidMPCalculator" duration-ms="4" started-at="2016-07-28T14:28:05Z" data-provider="invalidMetalprices" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[pish pish Iron is 3910 Credits]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Iron]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[((?:[a-z]+ )+)([A-Z]\w+) is (\d+) Credits]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInValidMPCalculator -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:05Z" finished-at="2016-07-28T14:28:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInValidMPCalculator(java.lang.String, java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInValidMPCalculator" duration-ms="3" started-at="2016-07-28T14:28:05Z" data-provider="invalidMetalprices" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[pish pikachu Iron is 3910 Credits]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Iron]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[((?:[a-z]+ )+)([A-Z]\w+) is (\d+) Credits]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInValidMPCalculator -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInValidRomanTranslation([Ljava.lang.String;)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInValidRomanTranslation" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="inValidGlxy" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@174cf7a1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInValidRomanTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInValidRomanTranslation([Ljava.lang.String;)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInValidRomanTranslation" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="inValidGlxy" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3e1576fa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInValidRomanTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInvalidArabicTranslation(java.lang.String)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInvalidArabicTranslation" duration-ms="6" started-at="2016-07-28T14:28:06Z" data-provider="invalidRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="0" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInvalidArabicTranslation(java.lang.String)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInvalidArabicTranslation" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="invalidRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[VV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInvalidArabicTranslation(java.lang.String)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInvalidArabicTranslation" duration-ms="3" started-at="2016-07-28T14:28:06Z" data-provider="invalidRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IIII]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInvalidArabicTranslation(java.lang.String)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInvalidArabicTranslation" duration-ms="4" started-at="2016-07-28T14:28:06Z" data-provider="invalidRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IIIVI]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInvalidArabicTranslation(java.lang.String)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInvalidArabicTranslation" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="invalidRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[VIIII]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidArabicTranslation(java.lang.String, int)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidArabicTranslation" duration-ms="3" started-at="2016-07-28T14:28:06Z" data-provider="validRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[II]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidArabicTranslation(java.lang.String, int)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidArabicTranslation" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="validRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IV]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidArabicTranslation(java.lang.String, int)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidArabicTranslation" duration-ms="3" started-at="2016-07-28T14:28:06Z" data-provider="validRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[III]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidArabicTranslation(java.lang.String, int)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidArabicTranslation" duration-ms="3" started-at="2016-07-28T14:28:06Z" data-provider="validRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[VI]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidArabicTranslation(java.lang.String, int)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidArabicTranslation" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="validRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[VIV]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidArabicTranslation(java.lang.String, int)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidArabicTranslation" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="validRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[VIII]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidArabicTranslation(java.lang.String, int)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidArabicTranslation" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="validRomanNumeral" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MCMIII]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1903]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidArabicTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="0" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidMPCalculator(java.lang.String, java.lang.String, main.InputRegex, double)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidMPCalculator" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="validMetalprices" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[glob prok Gold is 57800 Credits]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Gold]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[((?:[a-z]+ )+)([A-Z]\w+) is (\d+) Credits]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[14450.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidMPCalculator -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidMPCalculator(java.lang.String, java.lang.String, main.InputRegex, double)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidMPCalculator" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="validMetalprices" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[glob glob Silver is 34 Credits]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Silver]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[((?:[a-z]+ )+)([A-Z]\w+) is (\d+) Credits]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[17.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidMPCalculator -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="0" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidRomanTranslation([Ljava.lang.String;)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidRomanTranslation" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="validGlxy" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@2713fcac]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidRomanTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidRomanTranslation([Ljava.lang.String;)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidRomanTranslation" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="validGlxy" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@1131943f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidRomanTranslation -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInValidQProcessor(java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInValidQProcessor" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="invalidQuestions" depends-on-methods="test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[how much is pish tegj glob glob ?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^how much is ((?:\w+[^0-9] )+)\?$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInValidQProcessor -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInValidQProcessor(java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInValidQProcessor" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="invalidQuestions" depends-on-methods="test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[how much is prok glob glob glob glob ?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^how much is ((?:\w+[^0-9] )+)\?$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInValidQProcessor -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="0" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testInValidQProcessor(java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testInValidQProcessor" duration-ms="7" started-at="2016-07-28T14:28:06Z" data-provider="invalidQuestions" depends-on-methods="test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[how many Credits is glob prok Iron ?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^how many Credits is ((?:\w+ )+)([A-Z]\w+) \?$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInValidQProcessor -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testRgxMismatchProcessor(main.Processor, java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testRgxMismatchProcessor" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="regexmismatch" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess, test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[main.MetalPriceCalculator@4b7ae6a5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pish pish Iron is 3910 Rupay]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[((?:[a-z]+ )+)([A-Z]\w+) is (\d+) Credits]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[No match found]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: No match found
	at java.util.regex.Matcher.group(Matcher.java:485)
	at main.MetalPriceCalculator.process(MetalPriceCalculator.java:26)
	at test.MerchantGalaxyGuideTest.testRgxMismatchProcessor(MerchantGalaxyGuideTest.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRgxMismatchProcessor -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testRgxMismatchProcessor(main.Processor, java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testRgxMismatchProcessor" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="regexmismatch" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess, test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[main.MetalPriceCalculator@4b7ae6a5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pish pish Iron is 39Rupay]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[((?:[a-z]+ )+)([A-Z]\w+) is (\d+) Credits]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[No match found]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: No match found
	at java.util.regex.Matcher.group(Matcher.java:485)
	at main.MetalPriceCalculator.process(MetalPriceCalculator.java:26)
	at test.MerchantGalaxyGuideTest.testRgxMismatchProcessor(MerchantGalaxyGuideTest.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRgxMismatchProcessor -->
        <test-method status="PASS" signature="testRgxMismatchProcessor(main.Processor, java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testRgxMismatchProcessor" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="regexmismatch" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess, test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[main.QuestionProcessor@38dbe3d3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[how many Credits is glob prokSilver ?]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[^how many Credits is ((?:\w+ )+)([A-Z]\w+) \?$]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[No match found]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: No match found
	at java.util.regex.Matcher.group(Matcher.java:485)
	at main.QuestionProcessor.processHowMany(QuestionProcessor.java:80)
	at main.QuestionProcessor.process(QuestionProcessor.java:28)
	at test.MerchantGalaxyGuideTest.testRgxMismatchProcessor(MerchantGalaxyGuideTest.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRgxMismatchProcessor -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="0" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testRgxMismatchProcessor(main.Processor, java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testRgxMismatchProcessor" duration-ms="2" started-at="2016-07-28T14:28:06Z" data-provider="regexmismatch" depends-on-methods="test.MerchantGalaxyGuideTest.testNumTranslatorProcess, test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[main.QuestionProcessor@38dbe3d3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[how much wood could a woodchuck chuck if a woodchuck could chuck wood ?]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[^how many Credits is ((?:\w+ )+)([A-Z]\w+) \?$]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[No match found]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: No match found
	at java.util.regex.Matcher.group(Matcher.java:485)
	at main.QuestionProcessor.processHowMany(QuestionProcessor.java:80)
	at main.QuestionProcessor.process(QuestionProcessor.java:28)
	at test.MerchantGalaxyGuideTest.testRgxMismatchProcessor(MerchantGalaxyGuideTest.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRgxMismatchProcessor -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidQProcessor(java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidQProcessor" duration-ms="4" started-at="2016-07-28T14:28:06Z" data-provider="validQuestions" depends-on-methods="test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[how much is prok glob glob ?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^how much is ((?:\w+[^0-9] )+)\?$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidQProcessor -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="3" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidQProcessor(java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidQProcessor" duration-ms="5" started-at="2016-07-28T14:28:06Z" data-provider="validQuestions" depends-on-methods="test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[how many Credits is glob prok Silver ?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^how many Credits is ((?:\w+ )+)([A-Z]\w+) \?$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidQProcessor -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidQProcessor(java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidQProcessor" duration-ms="5" started-at="2016-07-28T14:28:06Z" data-provider="validQuestions" depends-on-methods="test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[how many Credits is glob prok Gold ?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^how many Credits is ((?:\w+ )+)([A-Z]\w+) \?$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidQProcessor -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="1" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
        <test-method status="PASS" signature="testValidQProcessor(java.lang.String, main.InputRegex)[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="testValidQProcessor" duration-ms="6" started-at="2016-07-28T14:28:06Z" data-provider="validQuestions" depends-on-methods="test.MerchantGalaxyGuideTest.testValidMPCalculator" finished-at="2016-07-28T14:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[how much is prok glob glob prok ?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^how much is ((?:\w+[^0-9] )+)\?$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidQProcessor -->
        <test-method status="PASS" signature="cleanSlate()[pri:0, instance:test.MerchantGalaxyGuideTest@14ddf6a1]" name="cleanSlate" is-config="true" duration-ms="3" started-at="2016-07-28T14:28:06Z" finished-at="2016-07-28T14:28:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSlate -->
      </class> <!-- test.MerchantGalaxyGuideTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
